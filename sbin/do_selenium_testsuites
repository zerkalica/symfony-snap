#!/bin/bash

# project run mode configurations
SLNM_BASEURL="$1"
BUILD_NUMBER=${2:-"0"}
REPTS_PATH=${3:-"build/selenium"}
SLNM_TESTING_TIMEOUT=${4:-"1500"}
BUILDEDTESTS_PATH="$REPTS_PATH/tests"

die() {
    echo $1
    exit $2
}

if [ -z $SLNM_BASEURL ] ; then
    die "$0 selenium_base_url [build_number] [path to selenium report dir] [selenium process kill timeout in seconds]" 1
fi

# xserver parameters
XSCREENS_LIMIT="10"
XVFB_OPTS="-ac"

# look for needed commands
ls=$(which ls)
ant=$(which ant)
xvfb=$(which Xvfb)
ps=$(which ps)
kill=$(which kill)
grep=$(which grep)
import=$(which import)

echo "check executables"
[ -x "$ls" ]   || exit $LINENO
[ -x "$ps" ]   || exit $LINENO
[ -x "$kill" ] || exit $LINENO
[ -x "$grep" ] || exit $LINENO
[ -x "$ant" ]  || die "ant not found" $LINENO
[ -x "$import" ] || echo "import not found: disable screenshot" $LINENO

IMPORT_OPTS="-window root"

if [ -x "$xvfb" ] ; then
    echo "look for unused xserver display and selenium port"
    r=0
    while true ; do
        r="$[($RANDOM % $XSCREENS_LIMIT) + 1]"
        [ -z "$($ps ax | $grep $xvfb | $grep ":$r.0")" ] && break
    done
    # set variables
    DISPLAY=":$r.0"
    SLNM_PORT="$[4444 + $r]"

    IMPORT_OPTS="-display $DISPLAY $IMPORT_OPTS"

    echo "start xserver"
    $xvfb $XVFB_OPTS $DISPLAY &
    XVFB_PID=$!
    $ps $XVFB_PID 2>/dev/null 1>/dev/null || die "xvfb not started" $LINENO
else
    echo "xvfb not found: disable starting xwindows and import screenshot"
    import=
    SLNM_PORT="4444"
fi

echo "pass through testsuites and run ones: $SLNM_BASEURL"

RC=0
$ant selenium.prepare -D"slnm.url=$SLNM_BASEURL" -D"slnm.testsdir.prepared=$BUILDEDTESTS_PATH"
RC=$?
[ $RC = 0 ] || die "selenium tests preparing failed" $RC

$ant version.build -D"build.number=$BUILD_NUMBER"

for test in $($ls -1 $BUILDEDTESTS_PATH/ | grep ".suite") ; do
    echo "Running suite $BUILDEDTESTS_PATH/$test"
    test=$(echo "$test" | cut -d'.' -f1)

    $ant selenium \
         -D"slnm.port=$SLNM_PORT" \
         -D"slnm.suite=$test" \
         -D"slnm.testsdir.prepared=$BUILDEDTESTS_PATH" \
         -D"display=$DISPLAY" &
    ANT_PID=$!

    PS_RC=0
    echo "wait for selenium finished successfully"
    while (( t < $SLNM_TESTING_TIMEOUT )); do
        sleep 1
        $ps $ANT_PID 2>/dev/null 1>/dev/null
        PS_RC=$?
        [ $PS_RC = 0 ] || break
        (( t++ ))
    done

    if [ $PS_RC = 0 ]  ; then
        echo "process become zombie"
        if [ -x $import ] ;then
            echo "take screenshot $import $IMPORT_OPTS $REPTS_PATH/$test.png"
            $import $IMPORT_OPTS "$REPTS_PATH/$test.png"
        fi
        echo "kill sleep process"
        $kill $ANT_PID
        RC=$LINENO
        break
    else
        wait $ANT_PID
        RC=$?
        [ $RC = 0 ] || break
    fi
done

[ $RC = 0 ] && $ant db
[ "$XVFB_PID" ] && $kill $XVFB_PID
[ $RC = 0 ] || echo "selenium tests failed: $RC"

exit $RC
