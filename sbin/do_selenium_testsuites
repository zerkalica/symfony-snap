#!/bin/bash

# define configuration variables
TESTS_PATH="app/Resources/tests/selenium"
BUILDEDTESTS_PATH="build/selenium/tests"
TESTS_SUFF="suite"
REPTS_PATH="build/selenium"
REPTS_SUFF="html"


# selenium testing timeout
SLNM_TESTING_TIMEOUT="1500"

# project run mode configurations
[ -z $SLNM_BASEURL ] && SLNM_BASEURL="$1"
[ -z $APP_ENV ] && APP_ENV="test"

die() {
    echo $1
    exit $2
}


if [ -z $SLNM_BASEURL ] ; then
    die "$0 [selenium base url]" 1
fi

# xserver parameters
XSCREENS_LIMIT="10"
XVFB_OPTS="-ac"

# look for needed commands
ls=$(which ls)
ant=$(which ant)
xvfb=$(which Xvfb)
ps=$(which ps)
kill=$(which kill)
grep=$(which grep)
import=$(which import)

echo "check executables"
[ -x "$ls" ]   || exit $LINENO
[ -x "$ps" ]   || exit $LINENO
[ -x "$kill" ] || exit $LINENO
[ -x "$grep" ] || exit $LINENO
[ -x "$ant" ]  || die "Ant not found" $LINENO
[ -x "$xvfb" ] || die "Xvfb not found" $LINENO
[ -x "$import" ] || die "Import not found" $LINENO
[ -x "$import" ] && IMPORT_OPTS="-window root"

echo "look for unused xserver display and selenium port"
while true ; do
    r="$[($RANDOM % $XSCREENS_LIMIT) + 1]"
    [ -z "$($ps ax | $grep $xvfb | $grep ":$r.0")" ] && break
done

# set variables
DISPLAY=":$r.0"
SLNM_PORT="$[4444 + $r]"
[ -x $import ] && IMPORT_OPTS="-display $DISPLAY $IMPORT_OPTS"

echo "start xserver"
$xvfb $XVFB_OPTS $DISPLAY &
XVFB_PID=$!

echo "check that server started"
$ps $XVFB_PID 2>/dev/null 1>/dev/null || exit $LINENO

echo "preparing tests"
cp -Ra $TESTS_PATH $BUILDEDTESTS_PATH
NEW_URL=$(echo $SLNM_BASEURL | sed 's/\([\.:\/]\)/\\\1/g')
find $BUILDEDTESTS_PATH -type f -name '*.case' -exec sed "s/http\:\/\/loc\.partners\.boombate\.com\//$NEW_URL/g" -i {} \;
find $BUILDEDTESTS_PATH -type f -name '*.suite' -exec sed '/<\?xml version.*\?>/d' -i {} \;

echo "pass through testsuites and run ones: $SLNM_BASEURL"
RC=0
for test in $($ls -1 $BUILDEDTESTS_PATH/ | grep ".suite") ; do
    echo "Running suite $BUILDEDTESTS_PATH/$test"
    $ant test.selenium \
         -D"slnmport=$SLNM_PORT" \
         -D"slnmurl=\"$SLNM_BASEURL\"" \
         -D"slnmsuite=$BUILDEDTESTS_PATH/$test" \
         -D"slnmreport=$REPTS_PATH/$APP_ENV""_${test%.TESTS_SUFF}.$REPTS_SUFF"\
         -D"display=$DISPLAY" &
    ANT_PID=$!

    echo "wait for selenium finished successfully"
    while (( t < $SLNM_TESTING_TIMEOUT )); do
        sleep 1
        $ps $ANT_PID 2>/dev/null 1>/dev/null || break
        (( t++ ))
    done

    echo "take screenshot $import $IMPORT_OPTS "$REPTS_PATH/$APP_ENV""_${test%.TESTS_SUFF}.png"
    [ -x $import ] && $import $IMPORT_OPTS "$REPTS_PATH/$APP_ENV""_${test%.TESTS_SUFF}.png"

    echo "kill sleep process"
    $kill $ANT_PID && RC=$LINENO
done

echo "reset database"
[ $RC = 0 ] && $ant db

echo "halt xserver"
$kill $XVFB_PID

exit $RC
